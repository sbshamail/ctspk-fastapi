"""category rootid

Revision ID: bfc690e160b5
Revises: d2a97a6f29a3
Create Date: 2025-10-02 11:21:36.260100

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "bfc690e160b5"
down_revision: Union[str, Sequence[str], None] = "d2a97a6f29a3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "attributes",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
        sa.Column(
            "language", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False
        ),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "categories",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.Column(
            "language", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False
        ),
        sa.Column("icon", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=True),
        sa.Column("image", sa.JSON(), nullable=True),
        sa.Column("details", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("root_id", sa.Integer(), nullable=True),
        sa.Column("admin_commission_rate", sa.Float(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["root_id"],
            ["categories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_categories_root_id"), "categories", ["root_id"], unique=False
    )
    op.create_index(op.f("ix_categories_slug"), "categories", ["slug"], unique=True)
    op.create_table(
        "manufacturers",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
        sa.Column("is_approved", sa.Boolean(), nullable=False),
        sa.Column("image", sa.JSON(), nullable=True),
        sa.Column("cover_image", sa.JSON(), nullable=True),
        sa.Column(
            "language", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False
        ),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "website", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=True
        ),
        sa.Column("socials", sa.JSON(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_manufacturers_slug"), "manufacturers", ["slug"], unique=True
    )
    op.create_table(
        "users",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
        sa.Column(
            "email", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False
        ),
        sa.Column(
            "phone_no", sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False
        ),
        sa.Column("is_root", sa.Boolean(), nullable=False),
        sa.Column("email_verified_at", sa.DateTime(), nullable=True),
        sa.Column("password", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "remember_token",
            sqlmodel.sql.sqltypes.AutoString(length=100),
            nullable=True,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=False)
    op.create_table(
        "attribute_values",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
        sa.Column("attribute_id", sa.Integer(), nullable=False),
        sa.Column(
            "value", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False
        ),
        sa.Column(
            "language", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False
        ),
        sa.Column("meta", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=True),
        sa.ForeignKeyConstraint(
            ["attribute_id"],
            ["attributes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "banners",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=True),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
        sa.Column(
            "language", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False
        ),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("image", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_banners_slug"), "banners", ["slug"], unique=True)
    op.create_table(
        "media",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("filename", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("extension", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("original", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("size_mb", sa.Float(), nullable=True),
        sa.Column("thumbnail", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("media_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "filename", name="uix_user_file"),
    )
    op.create_table(
        "roles",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("permissions", sa.JSON(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "shops",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=True),
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=True),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "cover_image", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("logo", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("address", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("settings", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "notifications", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_shops_slug"), "shops", ["slug"], unique=True)
    op.create_table(
        "products",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("price", sa.Float(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("sale_price", sa.Float(), nullable=True),
        sa.Column("purchase_price", sa.Float(), nullable=True),
        sa.Column(
            "language", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False
        ),
        sa.Column("min_price", sa.Float(), nullable=True),
        sa.Column("max_price", sa.Float(), nullable=True),
        sa.Column("sku", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=True),
        sa.Column(
            "bar_code", sqlmodel.sql.sqltypes.AutoString(length=250), nullable=True
        ),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("in_stock", sa.Boolean(), nullable=False),
        sa.Column("is_taxable", sa.Boolean(), nullable=False),
        sa.Column(
            "status", sa.Enum("PUBLISH", "DRAFT", name="productstatus"), nullable=False
        ),
        sa.Column(
            "product_type",
            sa.Enum("SIMPLE", "VARIABLE", name="producttype"),
            nullable=False,
        ),
        sa.Column("unit", sqlmodel.sql.sqltypes.AutoString(length=191), nullable=True),
        sa.Column("height", sa.Float(), nullable=True),
        sa.Column("width", sa.Float(), nullable=True),
        sa.Column("length", sa.Float(), nullable=True),
        sa.Column(
            "dimension_unit", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True
        ),
        sa.Column("is_feature", sa.Boolean(), nullable=True),
        sa.Column("image", sa.JSON(), nullable=True),
        sa.Column("video", sa.JSON(), nullable=True),
        sa.Column("gallery", sa.JSON(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("is_digital", sa.Boolean(), nullable=False),
        sa.Column("is_external", sa.Boolean(), nullable=False),
        sa.Column(
            "external_product_url",
            sqlmodel.sql.sqltypes.AutoString(length=191),
            nullable=True,
        ),
        sa.Column(
            "external_product_button_text",
            sqlmodel.sql.sqltypes.AutoString(length=191),
            nullable=True,
        ),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("shop_id", sa.Integer(), nullable=True),
        sa.Column("manufacturer_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["manufacturer_id"],
            ["manufacturers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["shop_id"],
            ["shops.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_products_category_id"), "products", ["category_id"], unique=False
    )
    op.create_index(
        op.f("ix_products_manufacturer_id"),
        "products",
        ["manufacturer_id"],
        unique=False,
    )
    op.create_index(op.f("ix_products_shop_id"), "products", ["shop_id"], unique=False)
    op.create_index(op.f("ix_products_slug"), "products", ["slug"], unique=True)
    op.create_table(
        "user_roles",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_shop",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("shop_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["shop_id"],
            ["shops.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "attribute_product",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("attribute_value_id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["attribute_value_id"],
            ["attribute_values.id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "carts",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("shop_id", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
        ),
        sa.ForeignKeyConstraint(
            ["shop_id"],
            ["shops.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("carts")
    op.drop_table("attribute_product")
    op.drop_table("user_shop")
    op.drop_table("user_roles")
    op.drop_index(op.f("ix_products_slug"), table_name="products")
    op.drop_index(op.f("ix_products_shop_id"), table_name="products")
    op.drop_index(op.f("ix_products_manufacturer_id"), table_name="products")
    op.drop_index(op.f("ix_products_category_id"), table_name="products")
    op.drop_table("products")
    op.drop_index(op.f("ix_shops_slug"), table_name="shops")
    op.drop_table("shops")
    op.drop_table("roles")
    op.drop_table("media")
    op.drop_index(op.f("ix_banners_slug"), table_name="banners")
    op.drop_table("banners")
    op.drop_table("attribute_values")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_manufacturers_slug"), table_name="manufacturers")
    op.drop_table("manufacturers")
    op.drop_index(op.f("ix_categories_slug"), table_name="categories")
    op.drop_index(op.f("ix_categories_root_id"), table_name="categories")
    op.drop_table("categories")
    op.drop_table("attributes")
    # ### end Alembic commands ###
