"""create_import_product_model

Revision ID: 0851668df893
Revises: 187f30b1cde4
Create Date: 2025-10-13 19:42:16.498176

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel
# revision identifiers, used by Alembic.
revision: str = '0851668df893'
down_revision: Union[str, Sequence[str], None] = '187f30b1cde4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_purchase',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('variation_option_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('purchase_date', sa.DateTime(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('sale_price', sa.Float(), nullable=True),
    sa.Column('purchase_price', sa.Float(), nullable=False),
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.Column('min_price', sa.Float(), nullable=True),
    sa.Column('max_price', sa.Float(), nullable=True),
    sa.Column('purchase_type', sa.Enum('DEBIT', 'CREDIT', name='purchasetype'), nullable=False),
    sa.Column('transaction_type', sa.Enum('PURCHASE', 'STOCK_ADDITION', 'STOCK_ADJUSTMENT', 'RETURN', 'DAMAGE', 'TRANSFER', name='transactiontype'), nullable=False),
    sa.Column('reference_number', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=True),
    sa.Column('supplier_name', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=True),
    sa.Column('invoice_number', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=True),
    sa.Column('batch_number', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('added_by', sa.Integer(), nullable=False),
    sa.Column('previous_stock', sa.Integer(), nullable=False),
    sa.Column('new_stock', sa.Integer(), nullable=False),
    sa.Column('transaction_details', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['added_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.ForeignKeyConstraint(['variation_option_id'], ['variation_options.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference_number')
    )
    op.create_table('product_purchase_variation_options',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_purchase_id', sa.Integer(), nullable=False),
    sa.Column('variation_options_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('sale_price', sa.Float(), nullable=True),
    sa.Column('purchase_price', sa.Float(), nullable=True),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('sku', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('purchase_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['product_purchase_id'], ['product_purchase.id'], ),
    sa.ForeignKeyConstraint(['variation_options_id'], ['variation_options.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('products', 'total_purchased_quantity',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('products', 'total_sold_quantity',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('products', 'total_sold_quantity',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('products', 'total_purchased_quantity',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_table('product_purchase_variation_options')
    op.drop_table('product_purchase')
    # ### end Alembic commands ###
