"""create address coupons table

Revision ID: 81f3cc9d2bfb
Revises: 59465d9bb987
Create Date: 2025-10-06 06:06:49.833153

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel
# revision identifiers, used by Alembic.
revision: str = '81f3cc9d2bfb'
down_revision: Union[str, Sequence[str], None] = '59465d9bb987'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coupons',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('image', sa.JSON(), nullable=True),
    sa.Column('type', sa.Enum('FIXED', 'PERCENTAGE', 'FREE_SHIPPING', name='coupontype'), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('minimum_cart_amount', sa.Float(), nullable=False),
    sa.Column('active_from', sa.DateTime(), nullable=False),
    sa.Column('expire_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_coupons_code'), 'coupons', ['code'], unique=True)
    op.create_table('address',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('address', sa.JSON(), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('order_product', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('order_product', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('order_product', 'order_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('order_product', 'product_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('order_product', 'variation_option_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.drop_index('ix_order_product_order_id', table_name='order_product')
    op.drop_index('ix_order_product_product_id', table_name='order_product')
    op.drop_index('ix_order_product_variation_option_id', table_name='order_product')
    op.drop_constraint('order_product_product_id_fkey', 'order_product', type_='foreignkey')
    op.drop_constraint('order_product_order_id_fkey', 'order_product', type_='foreignkey')
    op.create_foreign_key(None, 'order_product', 'variation_options', ['variation_option_id'], ['id'])
    op.create_foreign_key(None, 'order_product', 'products', ['product_id'], ['id'])
    op.create_foreign_key(None, 'order_product', 'orders', ['order_id'], ['id'])
    op.alter_column('orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('orders', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('orders', 'customer_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('orders', 'coupon_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('orders', 'shop_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('orders', 'logistics_provider',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
   
    op.alter_column('orders', 'fullfillment_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.drop_index('ix_orders_customer_id', table_name='orders')
    op.drop_index('ix_orders_shop_id', table_name='orders')
    op.drop_index('ix_orders_tracking_number', table_name='orders')
    op.drop_constraint('orders_shop_id_fkey', 'orders', type_='foreignkey')
    op.create_foreign_key(None, 'orders', 'users', ['fullfillment_id'], ['id'])
    op.create_foreign_key(None, 'orders', 'shops', ['shop_id'], ['id'])
    op.create_foreign_key(None, 'orders', 'coupons', ['coupon_id'], ['id'])
    op.drop_column('orders', 'deleted_at')
    op.alter_column('orders_status', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('orders_status', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('orders_status', 'order_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('variation_options', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('variation_options', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('variation_options', 'sale_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sqlmodel.sql.sqltypes.AutoString(length=191),
               nullable=True)
    op.alter_column('variation_options', 'purchase_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('variation_options', 'quantity',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('variation_options', 'options',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('variation_options', 'product_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.drop_index('ix_variation_options_product_id', table_name='variation_options')
    op.drop_constraint('variation_options_product_id_fkey', 'variation_options', type_='foreignkey')
    op.create_foreign_key(None, 'variation_options', 'products', ['product_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'variation_options', type_='foreignkey')
    op.create_foreign_key('variation_options_product_id_fkey', 'variation_options', 'products', ['product_id'], ['id'], ondelete='CASCADE')
    op.create_index('ix_variation_options_product_id', 'variation_options', ['product_id'], unique=False)
    op.alter_column('variation_options', 'product_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('variation_options', 'options',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('variation_options', 'quantity',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('variation_options', 'purchase_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('variation_options', 'sale_price',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=191),
               type_=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('variation_options', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('variation_options', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('orders_status', 'order_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('orders_status', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('orders_status', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.add_column('orders', sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.create_foreign_key('orders_shop_id_fkey', 'orders', 'shops', ['shop_id'], ['id'], ondelete='CASCADE')
    op.create_index('ix_orders_tracking_number', 'orders', ['tracking_number'], unique=False)
    op.create_index('ix_orders_shop_id', 'orders', ['shop_id'], unique=False)
    op.create_index('ix_orders_customer_id', 'orders', ['customer_id'], unique=False)
    op.alter_column('orders', 'fullfillment_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    
    op.alter_column('orders', 'logistics_provider',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('orders', 'shop_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('orders', 'coupon_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('orders', 'customer_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('orders', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint(None, 'order_product', type_='foreignkey')
    op.drop_constraint(None, 'order_product', type_='foreignkey')
    op.drop_constraint(None, 'order_product', type_='foreignkey')
    op.create_foreign_key('order_product_order_id_fkey', 'order_product', 'orders', ['order_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('order_product_product_id_fkey', 'order_product', 'products', ['product_id'], ['id'], ondelete='CASCADE')
    op.create_index('ix_order_product_variation_option_id', 'order_product', ['variation_option_id'], unique=False)
    op.create_index('ix_order_product_product_id', 'order_product', ['product_id'], unique=False)
    op.create_index('ix_order_product_order_id', 'order_product', ['order_id'], unique=False)
    op.alter_column('order_product', 'variation_option_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('order_product', 'product_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('order_product', 'order_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('order_product', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('order_product', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_table('address')
    op.drop_index(op.f('ix_coupons_code'), table_name='coupons')
    op.drop_table('coupons')
    # ### end Alembic commands ###
